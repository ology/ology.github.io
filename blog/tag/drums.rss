<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>techn.ology.net</title>
        <link>http://techn.ology.net/blog/tag/drums/</link>
        <atom:link href="http://techn.ology.net/blog/tag/drums.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of techn.ology.net</description>
        <generator>Statocles 0.097</generator>
        <item>
            <title>Imitating a Drum Circle</title>
            <link>http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/</link>
            <guid>http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/</guid>
            <description><![CDATA[
                <p><img alt="" src="http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/drum-circle.jpg">
Ever been to the park and heard a tribe drumming in the distance?  This is a <a href="https://en.wikipedia.org/wiki/Drum_circle">drum circle</a>.
Upon closer inspection, each drummer has a single instrument (or maybe a set of bongos).
Each drummer keeps a steady beat in common and in syncopation with his or her fellow drummers.</p>

<p>~</p>

<p>I wondered if this could be simulated somehow?  There are of course decisions to be made - parts to this equation... How should the drummers enter? All at once or gradually?  How should a drum be chosen or selected?  And what phrase(s) should be played anyway?</p>

<p>Enter MIDI-Perl.  Here is the program: <a href="https://github.com/ology/Music/blob/master/drum-circle">drum-circle</a></p>

<p>Basically it does the following:</p>

<ol>
<li><p>Use the modules necessary to have a drummer and rhythmic phrases.</p></li>
<li><p>Define the number of drummers ($max) as a number supplied by the user (or 4 by default).</p></li>
<li><p>Define a <a href="https://metacpan.org/pod/MIDI::Drummer::Tiny">MIDI::Drummer::Tiny</a> instance ($d), which will drive everything.</p></li>
<li><p>Set the possible drums to use (@DRUMS).  In our case this is a group of toms, bongos, congas, cabasa, maracas, guiro, claves, and wood blocks.</p></li>
<li><p>Declare an array of phrases (@phrases), which is to be populated with code-references.</p></li>
<li><p>Define a 4 bar <a href="https://metacpan.org/pod/Music::Duration::Partition">Music::Duration::Partition</a> instance ($mdp), which we will use to generate rhythmic motifs for each drummer.</p></li>
<li><p>Loop from 1 to $max, appending phrases to play for each new drummer.</p></li>
<li><p>Add the phrases to the score such that they are played simultaneously.</p></li>
<li><p>Write the generated &quot;composition&quot; to disk, as a MIDI file named after the program &quot;drum-circle.&quot;</p></li>
<li><p>Define the subroutine to generate our phrases!</p></li>
</ol>

<p>This last part is shown here:</p>

<pre><code>sub phrase {
    my ($p) = @_; # Phrase number

    # Get an unseen drum to use
    my $drum = $DRUMS[int rand @DRUMS];
    while ($seen{$drum}++) {
        $drum = $DRUMS[int rand @DRUMS];
    }

    # Create a rhythmic phrase
    my $motif = $mdp-&gt;motif;

    # Either rest or play the motif
    my $phrase = sub {
        for my $n (1 .. $d-&gt;bars + 4) {
            # If we are not up yet, then rest
            if ($n &lt; ($p * 4)) {
                $d-&gt;rest($d-&gt;whole);
                next;
            }
            # Otherwise play the rhythmic phrase!
            for my $i (@$motif) {
                # Get a fluctuating velocity between f and fff
                my $vol = &#39;v&#39; . (96 + int(rand 32));
                $d-&gt;note($i, $drum, $vol);
            }
        }
    };

    return $phrase;
}
</code></pre>

<p>Here the variable $p is the number 1 to $max from our loop in step #7 above.  Next, an unseen drum is selected at random.  Then a <em>quasi-random</em> rhythmic motif is generated by <a href="https://metacpan.org/pod/Music::Duration::Partition">Music::Duration::Partition</a> as defined above.  Finally an anonymous subroutine is returned, that just decides whether to play the generated motif or rest for a whole note.</p>

<p>This resting is crucial.  Each drummer enters after 16 bars of the previous drummer having played.  So, the second drummer enters after 4 bars, the third after 8, the fourth after 12, etc.  Having everyone play at once or at random was just not a pleasant musical evolution.  So I chose to have them enter one at a time.</p>

<p>Each run of this is different.  Sometimes you get a &quot;pleasant musical evolution&quot;, but sometimes you get all toms, or just a weird clash of rhythms.  Here is one with 8 voices that is ok:</p>

<p><a href="http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/drum-circle-8v.mp3">drum-circle-8v.mp3</a></p>

<p>And how about another?</p>

<p><a href="http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/drum-circle-8v-II.mp3">drum-circle-8v-II.mp3</a></p>

<p>Ok, one more!</p>

<p><a href="http://techn.ology.net/blog/2020/11/01/imitating-a-drum-circle/drum-circle-8v-III.mp3">drum-circle-8v-III.mp3</a></p>


                    <p>Tags:
                        <a href="http://techn.ology.net/blog/tag/music/">music</a>
                        <a href="http://techn.ology.net/blog/tag/software/">software</a>
                        <a href="http://techn.ology.net/blog/tag/perl/">perl</a>
                        <a href="http://techn.ology.net/blog/tag/midi/">MIDI</a>
                        <a href="http://techn.ology.net/blog/tag/generative/">generative</a>
                        <a href="http://techn.ology.net/blog/tag/drums/">drums</a>
                    </p>

            ]]></description>
            <pubDate>
                Sun, 01 Nov 2020 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

