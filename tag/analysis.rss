<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Gene Boggs</title>
        <link>http://techn.ology.net/tag/analysis/</link>
        <atom:link href="http://techn.ology.net/tag/analysis.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Gene Boggs</description>
        <generator>Statocles 0.097</generator>
        <item>
            <title>Musical Ngrams Round II</title>
            <link>http://techn.ology.net/2020/06/06/musical-ngrams-round-ii/</link>
            <guid>http://techn.ology.net/2020/06/06/musical-ngrams-round-ii/</guid>
            <description><![CDATA[
                <p><img alt="" src="http://techn.ology.net/2020/06/06/musical-ngrams-round-ii/twinkle_ngram-play-durations.png">
What are &quot;ngrams&quot;?  And how do they relate to music?  Well <a href="https://en.wikipedia.org/wiki/N-gram">ngrams</a> are basically groups of tokens.  These groups are of a certain given size - say phrases of three words.  If we consider notes as tokens we get musical ngrams!  We can count the number of occurrences of each ngram phrase, and thus know how many times a given phrase is repeated.  How often does Bach repeat himself, for instance?</p>

                    <p><a href="http://techn.ology.net/2020/06/06/musical-ngrams-round-ii/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://techn.ology.net/tag/music/">music</a>
                        <a href="http://techn.ology.net/tag/software/">software</a>
                        <a href="http://techn.ology.net/tag/perl/">perl</a>
                        <a href="http://techn.ology.net/tag/midi/">MIDI</a>
                        <a href="http://techn.ology.net/tag/analysis/">analysis</a>
                        <a href="http://techn.ology.net/tag/ngrams/">ngrams</a>
                    </p>

            ]]></description>
            <pubDate>
                Sat, 06 Jun 2020 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>How Much Ink Is Used For Each Letter?</title>
            <link>http://techn.ology.net/2020/03/07/how-much-ink-is-used-for-each-letter/</link>
            <guid>http://techn.ology.net/2020/03/07/how-much-ink-is-used-for-each-letter/</guid>
            <description><![CDATA[
                <p>Today I became curious about how much ink is needed to print each of the 26 letters of the English alphabet.  Naturally I wrote <a href="https://github.com/ology/Graphics/blob/master/detect-black.pl">a program</a> to tell me...</p>

                    <p><a href="http://techn.ology.net/2020/03/07/how-much-ink-is-used-for-each-letter/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://techn.ology.net/tag/software/">software</a>
                        <a href="http://techn.ology.net/tag/perl/">perl</a>
                        <a href="http://techn.ology.net/tag/data/">data</a>
                        <a href="http://techn.ology.net/tag/analysis/">analysis</a>
                    </p>

            ]]></description>
            <pubDate>
                Sat, 07 Mar 2020 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Halstead Software Complexity of Perl Code</title>
            <link>http://techn.ology.net/2019/03/19/halstead-software-complexity-of-perl-code/</link>
            <guid>http://techn.ology.net/2019/03/19/halstead-software-complexity-of-perl-code/</guid>
            <description><![CDATA[
                <p>The other day I stumbled across the Wikipedia entry for <a href="https://en.wikipedia.org/wiki/Halstead_complexity_measures">Halstead software complexity</a> and became curious about how the language <a href="https://www.perl.org/">Perl</a> would measure up.</p>

<p>Now I knew the adage that &quot;only perl can parse perl&quot;, but I also knew about the <a href="https://metacpan.org/pod/PPI">PPI</a> set of modules on the <a href="https://metacpan.org/">CPAN</a>.  So I got to reading/experimenting...</p>

                    <p><a href="http://techn.ology.net/2019/03/19/halstead-software-complexity-of-perl-code/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://techn.ology.net/tag/perl/">perl</a>
                        <a href="http://techn.ology.net/tag/software/">software</a>
                        <a href="http://techn.ology.net/tag/complexity/">complexity</a>
                        <a href="http://techn.ology.net/tag/analysis/">analysis</a>
                    </p>

            ]]></description>
            <pubDate>
                Tue, 19 Mar 2019 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Bach Choral Harmony Network Diagrams</title>
            <link>http://techn.ology.net/2018/09/18/bach-choral-harmony-network-diagrams/</link>
            <guid>http://techn.ology.net/2018/09/18/bach-choral-harmony-network-diagrams/</guid>
            <description><![CDATA[
                <p>Today I decided to revisit the <a href="https://archive.ics.uci.edu/ml/datasets/Bach+Choral+Harmony">Bach Choral Harmony data set</a> and look at chord progression transitions.</p>

<p>In order to do this I wrote a small program that tallies the movement from one chord to another, and then outputs a <a href="https://graphviz.org/">Graphviz</a> dot file that can be turned into an image.</p>

                    <p><a href="http://techn.ology.net/2018/09/18/bach-choral-harmony-network-diagrams/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://techn.ology.net/tag/music/">music</a>
                        <a href="http://techn.ology.net/tag/software/">software</a>
                        <a href="http://techn.ology.net/tag/perl/">perl</a>
                        <a href="http://techn.ology.net/tag/analysis/">analysis</a>
                    </p>

            ]]></description>
            <pubDate>
                Tue, 18 Sep 2018 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

